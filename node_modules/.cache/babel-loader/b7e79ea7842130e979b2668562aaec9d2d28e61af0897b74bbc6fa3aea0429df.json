{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/gcruz/Projects/Tapr/Tapr-UI-UX/src/devtools/SimulatedInput.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useZone } from '../context/ZoneContext';\nimport { routeTouch } from '../utils/TouchRouter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SimulatedInput() {\n  _s();\n  const {\n    zones\n  } = useZone();\n  const [matchedActions, setMatchedActions] = useState([]);\n  useEffect(() => {\n    const gesture = {\n      fingers: 2,\n      motion: 'tap'\n    };\n    const result = routeTouch(zones, gesture.fingers, gesture.motion);\n    setMatchedActions(result);\n    /*#__PURE__*/_jsxDEV(GestureFeedback, {\n      matchedActions: matchedActions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n    console.log('Result of simulated gesture:', result);\n  }, []);\n  return null;\n}\n_s(SimulatedInput, \"MwpRFDsxUr9TrUiK+jiOEzWrxkg=\", false, function () {\n  return [useZone];\n});\n_c = SimulatedInput;\nvar _c;\n$RefreshReg$(_c, \"SimulatedInput\");","map":{"version":3,"names":["useEffect","useZone","routeTouch","jsxDEV","_jsxDEV","SimulatedInput","_s","zones","matchedActions","setMatchedActions","useState","gesture","fingers","motion","result","GestureFeedback","fileName","_jsxFileName","lineNumber","columnNumber","console","log","_c","$RefreshReg$"],"sources":["/mnt/c/Users/gcruz/Projects/Tapr/Tapr-UI-UX/src/devtools/SimulatedInput.js"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { useZone } from '../context/ZoneContext';\r\nimport { routeTouch } from '../utils/TouchRouter';\r\n\r\nexport default function SimulatedInput() {\r\n  const { zones } = useZone();\r\n  const [matchedActions, setMatchedActions] = useState([]);\r\n\r\n    useEffect(() => {\r\n      const gesture = { fingers: 2, motion: 'tap' };\r\n      const result = routeTouch(zones, gesture.fingers, gesture.motion);\r\n      setMatchedActions(result);\r\n      <GestureFeedback matchedActions={matchedActions} />\r\n      console.log('Result of simulated gesture:', result);\r\n    }, []);\r\n\r\n  return null;\r\n}"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,UAAU,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM;IAAEC;EAAM,CAAC,GAAGN,OAAO,CAAC,CAAC;EAC3B,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAEtDV,SAAS,CAAC,MAAM;IACd,MAAMW,OAAO,GAAG;MAAEC,OAAO,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAM,CAAC;IAC7C,MAAMC,MAAM,GAAGZ,UAAU,CAACK,KAAK,EAAEI,OAAO,CAACC,OAAO,EAAED,OAAO,CAACE,MAAM,CAAC;IACjEJ,iBAAiB,CAACK,MAAM,CAAC;IACzB,aAAAV,OAAA,CAACW,eAAe;MAACP,cAAc,EAAEA;IAAe;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACnDC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEP,MAAM,CAAC;EACrD,CAAC,EAAE,EAAE,CAAC;EAER,OAAO,IAAI;AACb;AAACR,EAAA,CAbuBD,cAAc;EAAA,QAClBJ,OAAO;AAAA;AAAAqB,EAAA,GADHjB,cAAc;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}