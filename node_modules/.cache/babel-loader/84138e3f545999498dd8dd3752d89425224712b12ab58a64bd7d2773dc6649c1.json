{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/gcruz/Projects/Tapr/Tapr-UI-UX/src/components/GestureConfig.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { UserSetupContext } from '../context/UserSetupContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GestureConfig = () => {\n  _s();\n  const {\n    gesturePrefs,\n    setGesturePrefs\n  } = useContext(UserSetupContext);\n  const handleChange = (field, value) => {\n    setGesturePrefs(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gesture-config\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gesture Preferences\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Finger Count:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: gesturePrefs.fingerCount,\n      onChange: e => handleChange('fingerCount', parseInt(e.target.value)),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: 1,\n        children: \"1 Finger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 2,\n        children: \"2 Fingers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 3,\n        children: \"3 Fingers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Gesture Type:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: gesturePrefs.gestureType,\n      onChange: e => handleChange('gestureType', e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"tap\",\n        children: \"Tap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"swipe\",\n        children: \"Swipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), gesturePrefs.gestureType === 'swipe' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Swipe Direction:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: gesturePrefs.swipeDirection,\n        onChange: e => handleChange('swipeDirection', e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"horizontal\",\n          children: \"Horizontal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"vertical\",\n          children: \"Vertical\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"diagonal\",\n          children: \"Diagonal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"pattern\",\n          children: \"Pattern\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log('Saved:', gesturePrefs),\n      children: \"Save Preferences\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(GestureConfig, \"E9E4kPYpFgKuzsmE85WitHnOsM4=\");\n_c = GestureConfig;\nexport default GestureConfig;\nvar _c;\n$RefreshReg$(_c, \"GestureConfig\");","map":{"version":3,"names":["React","useContext","UserSetupContext","jsxDEV","_jsxDEV","Fragment","_Fragment","GestureConfig","_s","gesturePrefs","setGesturePrefs","handleChange","field","value","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","fingerCount","onChange","e","parseInt","target","gestureType","swipeDirection","onClick","console","log","_c","$RefreshReg$"],"sources":["/mnt/c/Users/gcruz/Projects/Tapr/Tapr-UI-UX/src/components/GestureConfig.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { UserSetupContext } from '../context/UserSetupContext';\r\n\r\nconst GestureConfig = () => {\r\n  const { gesturePrefs, setGesturePrefs } = useContext(UserSetupContext);\r\n\r\n  const handleChange = (field, value) => {\r\n    setGesturePrefs(prev => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"gesture-config\">\r\n      <h2>Gesture Preferences</h2>\r\n\r\n      <label>Finger Count:</label>\r\n      <select\r\n        value={gesturePrefs.fingerCount}\r\n        onChange={e => handleChange('fingerCount', parseInt(e.target.value))}\r\n      >\r\n        <option value={1}>1 Finger</option>\r\n        <option value={2}>2 Fingers</option>\r\n        <option value={3}>3 Fingers</option>\r\n      </select>\r\n\r\n      <label>Gesture Type:</label>\r\n      <select\r\n        value={gesturePrefs.gestureType}\r\n        onChange={e => handleChange('gestureType', e.target.value)}\r\n      >\r\n        <option value=\"tap\">Tap</option>\r\n        <option value=\"swipe\">Swipe</option>\r\n      </select>\r\n\r\n      {gesturePrefs.gestureType === 'swipe' && (\r\n        <>\r\n          <label>Swipe Direction:</label>\r\n          <select\r\n            value={gesturePrefs.swipeDirection}\r\n            onChange={e => handleChange('swipeDirection', e.target.value)}\r\n          >\r\n            <option value=\"horizontal\">Horizontal</option>\r\n            <option value=\"vertical\">Vertical</option>\r\n            <option value=\"diagonal\">Diagonal</option>\r\n            <option value=\"pattern\">Pattern</option>\r\n          </select>\r\n        </>\r\n      )}\r\n\r\n      <button onClick={() => console.log('Saved:', gesturePrefs)}>\r\n        Save Preferences\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GestureConfig;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}